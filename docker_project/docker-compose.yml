version: "3.9" # optional since v1.27.0
services:
  db:
    container_name: db
    image: postgres
    environment:
      POSTGRES_DB: story_db
      POSTGRES_USER: story
      POSTGRES_PASSWORD: somepassword # ${POSTGRES_PASSWORD}
  kafka:
    container_name: kafka
    image: quay.io/strimzi/kafka:latest-kafka-2.8.1-amd64
    command:
      [
        "sh",
        "-c",
        "export CLUSTER_ID=$$(bin/kafka-storage.sh random-uuid) && bin/kafka-storage.sh format -t $$CLUSTER_ID -c config/kraft/server.properties && bin/kafka-server-start.sh config/kraft/server.properties --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override listeners=$${KAFKA_LISTENERS}"
      ]
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  import_service_step1:
    # chunker
    container_name: step1_chunker
    build: import_service_chunker/.
    depends_on:
      - kafka
      - db
    volumes:
      - imports:/home/ubuntu/imports
  import_service_step2:
    # process
    container_name: step2_process
    build: import_service_process/.
    depends_on:
      - kafka
      - db
  import_service_step3:
    # report
    container_name: step3_report
    build: import_service_report/.
    depends_on:
      - kafka
      - db
volumes:
  imports:
    external: true
