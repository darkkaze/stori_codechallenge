version: "3.9" # optional since v1.27.0
services:
  db:
    container_name: db
    image: postgres:14.1-alpine
    environment:
      POSTGRES_DB: stori_db
      POSTGRES_USER: stori
      POSTGRES_PASSWORD: somepassword # ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - broker-kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - broker-kafka
  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - broker-kafka
  import_service_step1:
    container_name: step1_chunker
    build: import_service_chunker/.
    command: [ "python3", "-u", "main.py" ]
    restart: always
    depends_on:
      - broker
      - db
    volumes:
      - ./imports:/imports
      - ./processed:/processed
      - ./import_service_chunker:/app
    networks:
      - broker-kafka
    environment:
      KAFKA_SERVER: broker:29092
      KAFKA_OUTBOUND_TOPIC: "to_process"
  import_service_step2:
    container_name: step2_process
    build: import_service_process/.
    command: [ "python3", "-u", "main.py" ]
    restart: always
    depends_on:
      - kafka
      - import_service_step1
      - db
    volumes:
      - ./import_service_process:/app
    networks:
      - broker-kafka
    environment:
      KAFKA_SERVER: broker:29092
      KAFKA_INBOUND_TOPIC: "to_process"
      KAFKA_OUTBOUND_TOPIC: "to_report"
      DB_USERNAME: stori
      DB_PASSWORD: somepassword
      DB_HOST: db
      DB_DATABASE: stori_db
  import_service_step3:
    container_name: step3_report
    build: import_service_report/.
    command: [ "python3", "-u", "main.py" ]
    restart: always
    depends_on:
      - kafka
      - db
      - import_service_step2
    volumes:
      - ./import_service_report:/app
      - ./reports:/reports
    networks:
      - broker-kafka
    environment:
      KAFKA_SERVER: broker:29092
      KAFKA_INBOUND_TOPIC: "to_report"
      DB_USERNAME: stori
      DB_PASSWORD: somepassword
      DB_HOST: db
      DB_DATABASE: stori_db
      REPORT_FOLDER: /reports/

networks:
  broker-kafka:
    driver: bridge
